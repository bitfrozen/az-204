# Set bash variables
location="eastus2" &&
group="managedservice" &&
storagename="imgstor3344" &&
containername="images" &&
serviceplan="managedplan" &&
webapi="imgapi3344" &&
webapp="imgweb3344"

# Set powershell variables
$location="eastus2";
$group="managedservice";
$storagename="imgstor3344";
$containername="images";
$serviceplan="managedplan";
$webapi="imgapi3344";
$webapp="imgweb3344";

### Create resource group
# az cli
az group create --location $location --name $group
# powershell
New-AzResourceGroup -Name $group -Location $location
### Create storage account
# az cli
az storage account create --resource-group $group --location $location --name $storagename --sku Standard_LRS --kind StorageV2 --min-tls-version TLS1_2 --https-only
# powershell
New-AzStorageAccount -ResourceGroupName $group -SkuName Standard_LRS -Location $location -Name $storagename -Kind StorageV2
### Get storage account access inforamation
# az cli
az storage account keys list --account-name $storagename
az storage account show-connection-string --name $storagename --key primary
# powershell
Get-AzStorageAccountKey -Name $storagename -ResourceGroupName $group
--
### Delete resource group
# az cli
az group delete --name $group
# powershell
Remove-AzResourceGroup -Name $group
### Create storage container
# az cli
az storage container create --account-name $storagename --name $containername --public-access blob
# powershell
$ctx = New-AzStorageContext -UseConnectedAccount -StorageAccountName $storagename
New-AzStorageContainer -Name $containername -Context $ctx -Permission Blob
### Upload file (blob)
# az cli
az storage blob upload --account-name $storagename --container-name $containername --file "Images/grilledcheese.jpg"
# powershell
$ctx = New-AzStorageContext -UseConnectedAccount -StorageAccountName $storagename
Set-AzStorageBlobContent -Context $ctx -Container $containername -StandardBlobTier 'Hot' -File "Images/grilledcheese.jpg" -Blob "grilledcheese.jpg"
### Create app service plan
# az cli
az appservice plan create --resource-group $group --name $serviceplan --location $location --sku F1
# powershell
New-AzAppServicePlan -ResourceGroupName $group -Name $serviceplan -Location $location -Tier Standard -WorkerSize Small -NumberofWorkers 1 -PerSiteScaling $true
### Create webapi app
# az cli
az webapp create --resource-group $group --name $webapi --plan $serviceplan --runtime "DOTNETCORE:6.0"
# powershell
New-AzWebApp -ResourceGroupName $group -AppServicePlan $serviceplan -Name $webapi
### Set webapi settings
# az cli
az webapp config appsettings set -g $group -n $webapp --settings StorageConnectionString=$(az storage account show-connection-string -g $group -n $storagename -o tsv)
# powershell
$site = Get-AzWebApp -ResourceGroup $group -Name $webapp
$accessKey = (Get-AzStorageAccountKey -Name $storagename -ResourceGroupName $group)[0].Value
$connectionString = "DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=$storagename;AccountKey=$accessKey;"
$appSettings = @{ StorageConnectionString=$connectionString}
Set-AzWebApp -ResourceGroupName $group -Name $webapp -AppSettings ($appSettings)
### Get webapi app url
# az cli
az webapp show -g $group -n $webapp --query defaultHostName -o tsv
# powershell
(Get-AzWebApp -ResourceGroupName $group -Name $webapp).DefaultHostName
### Deploy webapi app
# az cli
# view deployment options
az webapp deployment list-publishing-profiles --resource-group $group --name $webapi
# perform deployment
az webapp deployment source config-zip --resource-group $group --name $webapi --src "api.zip"
# alternative deployment option
az webapp deploy --resource-group $group --name $webapi --type zip --src-path "api.zip" --async false --clean true
# powershell
# view deployment options
Get-AzWebAppPublishingProfile -ResourceGroupName $group -Name $webapi
# perform deployment
Publish-AzWebApp -ResourceGroupName $group -Name $webapi -ArchivePath "api.zip"
### Change dotnet stack version for webapp
az webapp config set --resource-group $group --name $webapi --linux-fx-version "DOTNETCORE|6.0"
### Deploy webapp app (frontend)
az webapp create --resource-group $group --name $webapp --plan $serviceplan --runtime "dotnet:6"
az webapp config appsettings set --resource-group $group --name $webapp --settings ApiUrl="https://"$(az webapp show -g $group -n $webapi --query defaultHostName -o tsv)"/api/images"
az webapp deployment source config-zip -g $group -n $webapp --src "app.zip"
