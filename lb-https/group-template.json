{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "publicKey": {
      "type": "securestring",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDC+NKnATW7z+kh3uM6vdbGaNxLBgUBY7t+6FntR4IYCku2fx8yQ41DEr2ilb2nQHFgmb5CkhRhTqsE810MI5hD8LmBRUUshQ+zlkVIYqWwzUi7B+zHD3m8e7aSqfUViIXoFJgK1LRLc5X+XRDenrF1BYzOe8Zvzn60cSHXC3zJVnPw7zhgNSTTw0DWS5JiL7Viq1dnq1zdptFYzJfPamJPUboSny99tpJHFzk3KYNZDQ8ozynUQxlMF5tVR6Ih352/vCLLt3E27Zlq0qRdIosX1oOOMrb7MQ/G6P4kxDvtaOQBB+Mk5QiuNZoT8kVwfRaZgRUl9mbNwZlzp7gUyYlBHJAdiVWsEUGlIQ8TnXp9GVDvv/Lg8D5WPpdoJwkUIukd6i8CZSlCPmNAlvYvET+fAL8ivX6JVIaI08E7QZHmPxE/wqPEDZCtC/BOy+JIG6Hp1P0QUQ+EK1bR0OrHhLO5lbMYXFn1M4qttePcZZL5PjowLRfFcOIhXhlKxwDFM/E= studio\\studio@studio"
    }
  },
  "functions": [],
  "variables": {
    "vm1Name": "vm1-webapp",
    "vm2Name": "vm2-webapp",
    "vm3Name": "vm3-bastion",
    "vm1NetworkInterface": "vm1-nic",
    "vm2NetworkInterface": "vm2-nic",
    "vm3NetworkInterface": "vm3-nic",
    "vm3PublicIp": "vm3-public-ip",
    "lbPublicIp": "lb-frontent-ip",
    "virtualNetwork": "test-vnet",
    "vmSubnet": "init-sub",
    "vmNetworkSecurityGroup": "webapp-nsg",
    "bastionNetworkSecurityGroup": "bastion-nsg",
    "availabilitySetName": "lb-test-vms-set",
    "loadBalancerName": "lb-webapp",
    "loadBalancerPoolName": "webapp-pool"
  },
  "resources": [
    {
      "name": "[variables('vm3PublicIp')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-01-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "name": "[variables('lbPublicIp')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-01-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic",
        "tier": "Regional"

      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "name": "[variables('virtualNetwork')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-01-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.10.10.0/24"
          ]
        },
        "subnets": [
          {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[variables('vmSubnet')]",
            "properties": {
              "addressPrefix": "10.10.10.0/28",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Disabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false
      }
    },
    {
      "name": "[variables('vmNetworkSecurityGroup')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-01-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-ssh-in",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-https-in",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-http-in",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1020,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('bastionNetworkSecurityGroup')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-01-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-ssh-in",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2022-03-01",
      "name": "[variables('availabilitySetName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformUpdateDomainCount": 2,
        "platformFaultDomainCount": 2
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2022-01-01",
      "name": "[variables('loadBalancerName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIp'))]"
      ],
      "sku": {
        "name": "Basic",
        "tier": "Regional"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "lb-frontend-config",
            "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/lb-frontend-config')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIp'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('loadBalancerPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "lb-frontent-webapp",
            "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/loadBalancingRules/lb-frontent-webapp')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/lb-frontend-config')]"
              },
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "SourceIP",
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('loadBalancerPoolName'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/kestrel-health')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "kestrel-health",
            "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/kestrel-health')]",
            "properties": {
              "protocol": "Http",
              "port": 80,
              "requestPath": "/health",
              "intervalInSeconds": 5,
              "numberOfProbes": 1
            }
          }
        ],
        "inboundNatRules": [],
        "inboundNatPools": []
      }
    },
    {
      "name": "[variables('vm1NetworkInterface')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-01-01",
      "location": "[parameters('location')]",
      "kind": "Regular",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmNetworkSecurityGroup'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "primary": true,
              "privateIPAddress": "10.10.10.4",
              "privateIPAddressVersion": "IPv4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetwork'), variables('vmSubnet'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('loadBalancerPoolName'))]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmNetworkSecurityGroup'))]"
        },
        "nicType": "Standard"
      }
    },
    {
      "name": "[variables('vm2NetworkInterface')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-01-01",
      "location": "[parameters('location')]",
      "kind": "Regular",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmNetworkSecurityGroup'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "primary": true,
              "privateIPAddress": "10.10.10.5",
              "privateIPAddressVersion": "IPv4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetwork'), variables('vmSubnet'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('loadBalancerPoolName'))]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('vmNetworkSecurityGroup'))]"
        },
        "nicType": "Standard"
      }
    },
    {
      "name": "[variables('vm3NetworkInterface')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-01-01",
      "location": "[parameters('location')]",
      "kind": "Regular",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm3PublicIp'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('bastionNetworkSecurityGroup'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "primary": true,
              "privateIPAddress": "10.10.10.6",
              "privateIPAddressVersion": "IPv4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetwork'), variables('vmSubnet'))]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm3PublicIp'))]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('bastionNetworkSecurityGroup'))]"
        },
        "nicType": "Standard"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-03-01",
      "name": "[variables('vm1Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NetworkInterface'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_B1ls"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 30
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('vm1Name')]",
          "adminUsername": "devops",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "/home/devops/.ssh/authorized_keys",
                  "keyData": "[parameters('publicKey')]"
                }
              ]
            },
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "ImageDefault",
              "assessmentMode": "ImageDefault"
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NetworkInterface'))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-03-01",
      "name": "[variables('vm2Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2NetworkInterface'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_B1ls"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 30
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('vm2Name')]",
          "adminUsername": "devops",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "/home/devops/.ssh/authorized_keys",
                  "keyData": "[parameters('publicKey')]"
                }
              ]
            },
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "ImageDefault",
              "assessmentMode": "ImageDefault"
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2NetworkInterface'))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-03-01",
      "name": "[variables('vm3Name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vm3NetworkInterface'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_B1ls"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 30
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[variables('vm3Name')]",
          "adminUsername": "devops",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "/home/devops/.ssh/authorized_keys",
                  "keyData": "[parameters('publicKey')]"
                }
              ]
            },
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "ImageDefault",
              "assessmentMode": "ImageDefault"
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm3NetworkInterface'))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {}
}